version: "3.8"

services:

    ## Php Service
    php:
        build: .
        target: Php
        args: 
            - APP_ENV = ${APP_ENV}
        environment:
            - APP_ENV = ${APP_ENV}
            - CONTAINER_ROLE = app
        working_dir: /var/www
        volumes:
            - ./:/var/www
        ports:
            - 8000:8000
        depends_on:
            - database
            - redis
    
    ## WebSocket Service
    websocket:
        build:
            context: .
            target: php
            args:
                - APP_ENV=${APP_ENV}
        environment:
            - APP_ENV=${APP_ENV}
            - CONTAINER_ROLE=websocket
        working_dir: /var/www
        volumes:
            - ./:/var/www
        ports:
            - 6001:6001
        depends_on:
            - database
            - redis

    ## Database Service
    database: 
        image: mysql:8.0
        ports:
            - 3306:3306
        environment:
            - MYSQL_DATABASE      = ${DB_DATABASE}
            - MYSQL_USERANAME     = ${DB_USERNAME}
            - MYSQL_PASSWORD      = ${DB_PASSWORD}
            - MYSQL_ROOT_PASSWORD = ${DB_PASSWORD}
        volumes:
            - db-data:/var/lib/mysql

    ## Redis Service
    redis:
        image: redis:alpine
        command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
        ports:
            - 6379:6379
    
    ## Queue Service
    queue:
        build:
            context: .
            target: php
            args:
                - APP_ENV = ${APP_ENV}
        environment:
            - APP_ENV = ${APP_ENV}
            - CONTAINER_ROLE = queue
        working_dir: /var/www
        volumes:
            - ./:/var/www
            
    ## Node Service
    node:
        build:
            context: .
            target: node
        volumes:
            - .:/usr/src
            - ./node_modules:/usr/src/node_modules
        tty: true

volumes: 
    db-data: ~